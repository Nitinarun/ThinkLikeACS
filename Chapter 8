Qn 1 
Word = "Python"
print(Word[1])

Sentence = "Strings are sequences of characters."
print(Sentence[5])

Word2 = "wonderful"
Function = len(Word2)
print(Function)

Word3 = "Mystery"
print(Word3[:4])

Word4 = "Pineapple"
if "p" in "Pineapple":
    print("True")

elif "apple" in "Pineapple":
    print("True")

elif "pear" not in "Pineapple":
    print("True")

"apple" > "pineapple"

"pineapple" < "Peach"

Qn 2
prefixes = "JKLMNOPQ"
suffix = "uack"

for letter in prefixes:
    print(letter + suffix)
    
Qn 3
fruit = "Banana"
count_letters = 0
for char in fruit:
    if char == "a":
        count_letters += 1
print(count_letters)

Qn 4
import sys
def test(did_pass):
    """  Print the result of a test.  """
    linenum = sys._getframe(1).f_lineno   # Get the caller's line number.
    if did_pass:
        msg = "Test at line {0} ok.".format(linenum)
    else:
        msg = ("Test at line {0} FAILED.".format(linenum))
    print(msg)

def find(strng,ch):

    fruit = "Banana"
    count_letters = 0
    while count_letters < len(strng):
        if strng[count_letters] == ch:
            return count_letters
        count_letters += 1
        return -1

test(find("Banana","a")==3)
test(find("Banana","n")==2)
test(find("Banana","B")==1)

Qn 6 
print("\t\t\tMultiplication Table\n")

for j in range (1,13):
    for k in range(1,13):
        print(j*k ,end="\t")
    print("\n")

Qn 7 
def reverse(astring):
    Backwards = astring[::-1]
    return Backwards

print(reverse("Python"))
print(reverse("Happy"))
print(reverse(""))
print(reverse("a"))

Qn 8 
def mirror(mystr):
    reverse = mystr[::-1]
    return mystr + reverse

print(mirror("Good"))
print(mirror("Python"))
print(mirror(""))
print("a")

Qn 9 
def remove_letter(substr , thestr):
    Location = thestr.find(substr)
    if Location < 0 :
        return thestr
    FinalStr = thestr[:Location] + thestr [Location + len(substr):]
    return FinalStr

print(remove_letter("a","apple"))
print(remove_letter("a","Banana"))
print(remove_letter("z","Banana"))
print(remove_letter("i","Mississippi"))
print(remove_letter("b",""))
print(remove_letter("b","c"))

Qn 12
def remove(substr , thestr):
    Location = thestr.find(substr)
    if Location < 0 :
        return thestr
    FinalStr = thestr[:Location] + thestr [Location + len(substr):]
    return FinalStr

print(remove("is","Mississippi"))
print(remove("an","banana"))
print(remove("ana","banana"))
print(remove("nana","banana"))
print(remove("nanan","banana"))
print(remove("aaa","aaaaaaa"))

Qn 13
def remove_all(substr , thestr):
    Location = thestr.find(substr)
    if Location < 0 :
        return thestr
    FinalStr = thestr[:Location] + thestr [Location + len(substr):]
    return FinalStr

print(remove_all("an","bana"))
print(remove_all("cyc","bicycle"))
print(remove_all("iss","Mississippi"))
print(remove_all("eggs","bicycle"))


